{"version":3,"sources":["./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/account.module.ts","./src/app/account/account-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACoC;;;;;;;;ICmB1E,qEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,oFACJ;;;IAHJ,wEACI;IAAA,iHAEK;IACT,4DAAK;;;IAHqB,0DAAS;IAAT,kFAAS;;ADRpC,MAAM,iBAAiB;IAI5B,YACU,EAAe,EACf,cAA8B,EAC9B,MAAc;QAFd,OAAE,GAAF,EAAE,CAAa;QACf,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,KAAK,EAAE;gBACL,IAAI;gBACJ,CAAC,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;aAE9D;YACD,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACxC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aACpD,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;kFAlCU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,6EACI;QAAA,0EAGI;QADE,6IAAY,cAAU,IAAC;QACzB,yEACI;QAAA,wEAAuC;QAAA,mEAAQ;QAAA,4DAAK;QACxD,4DAAM;QAEN,+EAEiB;QACjB,+EAEiB;QACjB,+EAGiB;QAEjB,2GAIK;QAEL,4EAEsB;QAAA,oEAAQ;QAAA,4DAAS;QAC3C,4DAAO;QACX,4DAAU;;QA3BA,0DAA0B;QAA1B,uFAA0B;QAOZ,0DAAwB;QAAxB,iFAAwB;QAGxB,0DAAyB;QAAzB,kFAAyB;QAGzB,0DAAoB;QAApB,6EAAoB;QAIG,0DAAY;QAAZ,4EAAY;QAM3C,0DAAkC;QAAlC,gIAAkC;;6FDbrC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;AAS7D,MAAM,cAAc;IAIzB,YACU,cAA8B,EAC9B,MAAc,EACd,cAA8B;QAF9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,IAAI,OAAO,CAAC;QAC/E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU;qBACxD,OAAO,CAAC,uCAAuC,CAAC,CAAC,CAAC;YACrD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;;QACN,IAAI,CAAC,cAAc,CAAC,KAAK,OAAC,IAAI,CAAC,SAAS,0CAAE,KAAK,CAAC;aAC7C,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;;4EA/BU,cAAc;8FAAd,cAAc;QCV3B,6EACI;QAAA,0EAGI;QADE,0IAAY,cAAU,IAAC;QACzB,yEACI;QAAA,wEAAuC;QAAA,kEAAO;QAAA,4DAAK;QACvD,4DAAM;QAEN,+EAEiB;QACjB,+EAGiB;QAEjB,4EAEsB;QAAA,kEAAO;QAAA,4DAAS;QAC1C,4DAAO;QACX,4DAAU;;QAlBA,0DAAuB;QAAvB,oFAAuB;QAOT,0DAAyB;QAAzB,kFAAyB;QAGzB,0DAAoB;QAApB,6EAAoB;QAI5B,0DAA+B;QAA/B,0HAA+B;;6FDNlC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACU;AACS;AACF;AACT;;AAYhD,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,kBANf;YACP,4DAAY;YACZ,4EAAoB;YACpB,kEAAY;SACb;mIAEU,aAAa,mBAPT,qEAAc,EAAE,8EAAiB,aAE9C,4DAAY;QACZ,4EAAoB;QACpB,kEAAY;6FAGH,aAAa;cARzB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAc,EAAE,8EAAiB,CAAC;gBACjD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4EAAoB;oBACpB,kEAAY;iBACb;aACF;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAEgB;AACF;AACW;;;AAElE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;CACjD,CAAC;AASK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBALtB;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B,EACS,4DAAY;mIAEX,oBAAoB,uFAFrB,4DAAY;6FAEX,oBAAoB;cAPhC,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC9B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB","file":"account-account-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AsyncValidatorFn, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  errors?: string[];\n\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [\n        null,\n        [Validators.required,\n         Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\n        //  [this.validateEmailNotTaken()]\n      ],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit(): void {\n    this.accountService.register(this.registerForm.value)\n    .subscribe(response => {\n      this.router.navigateByUrl('/shop');\n    }, error => {\n      console.log(error);\n      this.errors = error.errors;\n    });\n  }\n\n  // validateEmailNotTaken(): AsyncValidatorFn {\n  //   return control => {\n  //     return timer(1000).pipe(\n  //       switchMap(() => {\n  //         if (!control.value) {\n  //           return of(null);\n  //         }\n  //         return this.accountService.checkEmailExists(control.value)\n  //           .pipe(\n  //             map(res => {\n  //               return res ? {emailExists: true} : null;\n  //             })\n  //           );\n  //       })\n  //     );\n  //   };\n  // }\n}\n","<section class=\"login-container\">\n    <form class=\"form-signin\"\n          [formGroup]=\"registerForm\"\n          (ngSubmit)=\"onSubmit()\">\n        <div class=\"text-center mb-4\">\n            <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n        </div>\n\n        <app-text-input formControlName=\"displayName\"\n                        [label]=\"'Display Name'\">\n        </app-text-input>\n        <app-text-input formControlName=\"email\"\n                        [label]=\"'Email Address'\">\n        </app-text-input>\n        <app-text-input formControlName=\"password\"\n                        [label]=\"'Password'\"\n                        [type]=\"'password'\">\n        </app-text-input>\n\n        <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n            <li *ngFor=\"let error of errors\">\n                {{error}}\n            </li>\n        </ul>\n\n        <button [disabled]=\"registerForm?.invalid\"\n                class=\"\"\n                type=\"submit\">Register</button>\n    </form>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup | null;\n  returnUrl!: string;\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    console.log(this.returnUrl);\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators\n        .pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm?.value)\n      .subscribe(() => {\n        this.router.navigateByUrl('/shop');\n      }, error => {\n        console.log(error);\n      });\n  }\n\n}\n","<section class=\"login-container\">\n    <form class=\"form-signin\"\n          [formGroup]=\"loginForm\"\n          (ngSubmit)=\"onSubmit()\">\n        <div class=\"text-center mb-4\">\n            <h1 class=\"h3 mb-3 font-weight-normal\">Sign In</h1>\n        </div>\n\n        <app-text-input formControlName=\"email\"\n                        [label]=\"'Email Address'\">\n        </app-text-input>\n        <app-text-input formControlName=\"password\"\n                        [label]=\"'Password'\"\n                        [type]=\"'password'\">\n        </app-text-input>\n\n        <button [disabled]=\"loginForm?.invalid\"\n                class=\"\"\n                type=\"submit\">Sign in</button>\n    </form>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n"],"sourceRoot":"webpack:///"}